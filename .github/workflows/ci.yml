name: ci

on:
  # Run action on certain pull request events
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

  # After pushing to main
  push:
    branches: [main]

  # Nightly job on default (main) branch
  schedule:
    - cron: '0 0 * * *'

  # Allow tests to be run manually
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ghcr.io/${{ github.repository_owner }}/roscon_delib_ws_2025
  RAW_BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup pixi
        uses: prefix-dev/setup-pixi@v0.8.11
        with:
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
      - name: Run formatting
        run: pixi run lint
      - name: Build the environment
        run: pixi run build
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - run: docker build -t ${{ env.REGISTRY_IMAGE }}:latest -f .docker/Dockerfile .
      - name: Push to gh registry with sha and branch
        # Do not push on PRs from forks.
        if: ${{ !github.event.pull_request.head.repo.fork }}
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          # tag with sha and push
          docker tag ${{ env.REGISTRY_IMAGE }}:latest ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}
          # tag with branch name and push
          export BRANCH_NAME=$(echo ${{ env.RAW_BRANCH_NAME }} | sed 's/\//-/g')
          docker tag ${{ env.REGISTRY_IMAGE }}:latest ${{ env.REGISTRY_IMAGE }}:$BRANCH_NAME
          docker push ${{ env.REGISTRY_IMAGE }}:$BRANCH_NAME
          echo "TAG_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      - name: Push to gh registry with latest if this is main
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          # only from main we actually push to latest
          docker push ${{ env.REGISTRY_IMAGE }}:latest
          echo "TAG_NAME=latest" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/main'
  slides:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - run: cp slides/* .
      - uses: maxheld83/pandoc@v2.1.0
        with:
          args: "-t beamer main.md -o slides.pdf"
      - uses: actions/upload-artifact@main
        with:
          name: slides.pdf
          path: slides.pdf
      - name: Slides as release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'slides.pdf'
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.sha }}
          allowUpdates: true
          name: Workshop Slides
          tag: ${{ env.RAW_BRANCH_NAME }}
          makeLatest: ${{ github.ref == 'refs/heads/main' }}
  doc_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install pytest pytest-md pytest-emoji sybil docker
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
      - name: Run pytest
        uses: pavelzw/pytest-action@v2
        with:
          verbose: true
          emoji: true
          job-summary: true
          custom-arguments: '-vvs test/'
